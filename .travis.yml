# set travis distribution
dist: xenial

# no email notifications
notifications:
  email: false

# enable apt module to update packages:
addons:
  apt:
    update: true

# go is the primary language
language: go

# go version to use
go:
  - '1.15'

# enable docker for xgo and building docker containers
services:
  - docker

# set explicit caches
cache:
  directories:
    - ./node_modules
    - $HOME/gopath/pkg/mod

# explicit import path
go_import_path: github.com/chrisruffalo/gudgeon

before_install:
  # export versions into a format compatible with make file
  - export VERSION=${TRAVIS_TAG}
  - export LONGVERSION=$VERSION
  - export NUMBER=$(echo "$VERSION" | sed -r -e 's/([^0-9.-]*)?-?v?([0-9.]*)-?([^-]*)?-?([^-]*)?/\2/')
  # if none of these worked or had values, unset so make can do it
  - if [[ "" == "$VERSION" ]]; then unset VERSION; fi
  - if [[ "" == "$LONGVERSION" ]]; then unset LONGVERSION; fi
  - if [[ "" == "$NUMBER" ]]; then unset NUMBER; fi
  # debug
  - echo "VERSION=${VERSION}"
  - echo "LONGVERSION=${LONGVERSION}"
  - echo "NUMBER=${NUMBER}"

# make full use of cache.
before_script:
  # ensure go modules are forced on
  - export GO111MODULE=on
  # announce versions (so that we can debug from here if something is wrong, really)
  - make announce
  # install dependencies
  - sudo apt-get install -y ruby ruby-dev build-essential rpm libsqlite3-dev gcc-multilib g++-multilib npm gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi gcc-mips-linux-gnu gcc-mipsel-linux-gnu
  - gem install --no-document fpm
  # install node 13
  - curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -
  - sudo apt-get install -y nodejs
  # install newer version of npm
  - sudo npm install -g npm
  # prepare build environment
  - travis_retry travis_wait make prepare
  - travis_retry travis_wait make npm
  # more debug of installed tools
  - node_modules/.bin/webpack --version
  - node_modules/.bin/webpack-cli --version

  # the script needs to build the binaries to be successful
script:
  - export CGO_ENABLED=1
  - travis_retry make test
  # get third-party resources for build
  - make webpack
  # build binaries
  - make GOARCH="386" build
  - make GOARCH="amd64" build
  - make GOARCH="arm" GOARM=5 build
  - make GOARCH="arm" GOARM=6 build
  - make GOARCH="arm" GOARM=7 build
  - make GOARCH="arm64" build
  - make GOARCH=mips GOMIPS=softfloat build
  - make GOARCH=mipsle GOMIPS=softfloat build
  # cross-compile for arm (disable until xgo support/cc support is available)
  #- travis_retry travis_wait make buildxgo

before_deploy:
  # x86 packages
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make rpm
  - OS_BIN_ARCH=386 OS_ARCH=i686 make rpm
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make deb
  - OS_BIN_ARCH=386 OS_ARCH=i386 make deb
  # arm packages
  - BINARY_TARGET=gudgeon-linux-arm5 OS_ARCH=arm5 make rpm
  - BINARY_TARGET=gudgeon-linux-arm5 OS_ARCH=arm5 make deb
  - BINARY_TARGET=gudgeon-linux-arm6 OS_ARCH=arm6 make rpm
  - BINARY_TARGET=gudgeon-linux-arm6 OS_ARCH=arm6 make deb
  - BINARY_TARGET=gudgeon-linux-arm7 OS_ARCH=arm7 make rpm
  - BINARY_TARGET=gudgeon-linux-arm7 OS_ARCH=arm7 make deb
  - BINARY_TARGET=gudgeon-linux-arm64 OS_ARCH=arm64 make rpm
  - BINARY_TARGET=gudgeon-linux-arm64 OS_ARCH=arm64 make deb
  # mips packages
  - BINARY_TARGET=gudgeon-linux-mips OS_ARCH=mips make tar
  - BINARY_TARGET=gudgeon-linux-mipsle OS_ARCH=mipsle make tar
  # make docker build(s)
  - BINARY_TARGET=gudgeon-linux-amd64 make docker
  # push build(s) to docker cloud
  - docker login --username="$DOCKER_USERNAME" --password="$DOCKER_PASSWORD"
  - make dockerpush
  - DOCKER_TAG=latest make dockerpush
  # hash resources for greater confidence in distribution on github
  - make hash

deploy:
  provider: releases
  api_key: "$GITHUB_OAUTH_TOKEN"
  file_glob: true
  file: build/gudgeon*
  cleanup: false
  overwrite: true
  on:
    tags: true
